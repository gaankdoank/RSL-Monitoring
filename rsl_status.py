import telebot
import mysql.connector
import json
import datetime
import smtplib
import ssl
from datetime import datetime
from mysql.connector import Error

bot = telebot.TeleBot("your-telegram-bot-id")
port = 465  # For SSL
smtp_server = "your-smtp-server"
sender_email = "mailbox@yourdomain.com"  # Enter your address
receiver_email = "admin@yourdomain.com"  # Enter receiver address
password = "your-smtp-password"

try:
 	connection = mysql.connector.connect(host='192.168.30.5',
                             database='your_db',
                             user='db_user',
                             password='db_password')
 	if connection.is_connected():
                db_Info = connection.get_server_info()
                print("Connected to MySQL database... MySQL Server version on ",db_Info)
                cursor = connection.cursor()
                cursor.execute("SELECT hostname, interface, rsl, state, description FROM tblrsl WHERE post_date >= NOW() - INTERVAL 1 HOUR AND state IN ('2','3','5')")
                record = cursor.fetchall()
                print ("Total Row(s)", cursor.rowcount)
                hasil = []
                status = ""
                for x in record:
                        xlist = list(x)
                        if(x[3] == 3):
                                status = "Low Alarm"
                        elif(x[3] == 5):
                                status = "High Alarm"
                        else:
                                status = "Low Warning"
                        del xlist[3]
                        xlist.append(status)
                        hasil.append(xlist)

                bot.send_message(-484965814,"RSL status Metro-E: \n ============================= \n \n"+json.dumps(hasil,sort_keys=True, indent=4, separators=(',',':'))+format("\n \n Total : ")+format(cursor.rowcount)+format(" interfaces"))
                message = """\
From: System Notification <trm-alert@ibstower.com>
Subject: RSL Metro-e Jakarta

This message was generated by system \n."""+json.dumps(hasil, sort_keys=True, indent=4, separators=(',',':'))+format("\n \n Total : ")+format(cursor.rowcount)+format(" interfaces")
                context = ssl.create_default_context()
                with smtplib.SMTP_SSL(smtp_server, port, context=context) as server:
                    server.login(sender_email, password)
                    server.sendmail(sender_email, receiver_email, message)

except Error as e :
    print ("Error while connecting to MySQL", e)
finally:
    #closing database connection.
    if(connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
